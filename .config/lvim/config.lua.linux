-- - general
lvim.log.level = "warn"
lvim.format_on_save = true

-- transparent_window
lvim.transparent_window = false
-- lvim.transparent_window = true

-- rainbow parentheses
lvim.builtin.treesitter.rainbow.enable = true

-- status line
-- lvim.builtin.lualine.style = "default"
lvim.builtin.lualine.style = "lvim"
-- lvim.builtin.lualine.options.theme = "gruvbox-material"
-- lvim.builtin.lualine.options.theme = "onedark"

-- set relativenumber
vim.opt.relativenumber = true
-- vim.opt.relativenumber = false

-- Blinking Cursor
vim.opt.guicursor =
"n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50,a:blinkwait700-blinkoff400-blinkon250-Cursor/lCursor,sm:block-blinkwait175-blinkoff150-blinkon175"

-- remove current line highlight
-- vim.opt.cursorline = true
vim.opt.cursorline = false

------------------------------> Norminette
-- Don't convert tabs to space
-- vim.opt.expandtab = false

-- set tabs to 4 space
-- vim.opt.tabstop = 4

-- number of spaces for each indentation
-- vim.opt.shiftwidth = 4

-- autoindent
-- vim.opt.smartcase = false
-- vim.opt.autoindent = false
-- vim.opt.cindent = true
-- vim.opt.smartindent = true
------------------------------> Norminette

-- set column to 80
vim.opt.colorcolumn = "80"

-- show sign columg
vim.opt.signcolumn = "yes"

-- check spelling
vim.opt.spelllang = "en"

-- keymappings [view all the defaults by pressing <leader>Lk]
lvim.leader = "space"

-- add your own keymapping
lvim.keys.normal_mode["<C-s>"] = ":w<cr>"
lvim.keys.normal_mode["<S-l>"] = ":BufferLineCycleNext<CR>"
lvim.keys.normal_mode["<S-h>"] = ":BufferLineCyclePrev<CR>"

-- Change Telescope navigation to use j and k for navigation and n and p for history in both input and normal mode.
-- we use protected-mode (pcall) just in case the plugin wasn't loaded yet.
local _, actions = pcall(require, "telescope.actions")
lvim.builtin.telescope.defaults.mappings = {
	-- for input mode
	i = {
		["<S-j>"] = actions.move_selection_next,
		["<S-k>"] = actions.move_selection_previous,
		["<C-n>"] = actions.cycle_history_next,
		["<C-p>"] = actions.cycle_history_prev,
	},
	-- for normal mode
	n = {
		["<C-j>"] = actions.move_selection_next,
		["<C-k>"] = actions.move_selection_previous,
	},
}

local builtin = require('telescope.builtin')
vim.keymap.set('n', '<leader>ff', builtin.find_files, {})
vim.keymap.set('n', '<leader>fg', builtin.live_grep, {})
vim.keymap.set('n', '<leader>fb', builtin.buffers, {})
vim.keymap.set('n', '<leader>fh', builtin.help_tags, {})

lvim.builtin.telescope.defaults.layout_strategy = { "telescope.layout.horizontal()," }
-- Use which-key to add extra bindings with the leader-key prefix
lvim.builtin.which_key.mappings["P"] = { "<cmd>Telescope projects<CR>", "Projects" }
lvim.builtin.which_key.mappings["t"] = {
	name = "+Trouble",
	r = { "<cmd>Trouble lsp_references<cr>", "References" },
	f = { "<cmd>Trouble lsp_definitions<cr>", "Definitions" },
	d = { "<cmd>Trouble document_diagnostics<cr>", "Diagnostics" },
	q = { "<cmd>Trouble quickfix<cr>", "QuickFix" },
	l = { "<cmd>Trouble loclist<cr>", "LocationList" },
	w = { "<cmd>Trouble workspace_diagnostics<cr>", "Workspace Diagnostics" },
}

-- TODO: User Config for predefined plugins
-- After changing plugin config exit and reopen LunarVim, Run :PackerInstall :PackerCompile
lvim.builtin.alpha.active = true
lvim.builtin.alpha.mode = "dashboard"
-- lvim.builtin.notify.active = true
lvim.builtin.terminal.active = true
lvim.builtin.nvimtree.setup.view.side = "left"
lvim.builtin.nvimtree.setup.renderer.icons.show.git = false

-- if you don't want all the parsers change this to a table of the ones you want
lvim.builtin.treesitter.ensure_installed = {
	"bash",
	"c",
	"cpp",
	"javascript",
	"json",
	"lua",
	"python",
	"typescript",
	"tsx",
	"css",
	"rust",
	"java",
	"yaml",
}

lvim.builtin.treesitter.ignore_install = { "haskell" }
lvim.builtin.treesitter.highlight.enabled = true

-------------
-- GRUVBOX --
-------------
require('gruvbox').setup({
	undercurl = true,
	underline = true,
	bold = false,
	-- italic = true,
	strikethrough = true,
	invert_selection = false,
	invert_signs = false,
	invert_tabline = false,
	invert_intend_guides = false,
	-- inverse = true, -- invert background for search, diffs, statuslines and errors
	contrast = "hard", -- can be "hard", "soft" or empty string
	-- contrast = "", -- can be "hard", "soft" or empty string
	palette_overrides = {},
	overrides = {},
	dim_inactive = false,
	transparent_mode = false,
})

----------------------
-- GRUVBOX MATERIAL --
----------------------
require('everblush').setup({
	-- Set transparent background
	-- transparent_background = false,
	transparent_background = true,
})

------------------
-- COLORSCHEMES --
------------------

-- lvim.colorscheme = "gruvbox"
-- lvim.colorscheme = "gruvbox-material"

-- lvim.colorscheme = "nordic"
-- lvim.colorscheme = "onenord"
-- lvim.colorscheme = "nordfox"

-- lvim.colorscheme = "nightfox"
-- lvim.colorscheme = "duskfox"
-- lvim.colorscheme = "terafox"
-- lvim.colorscheme = "carbonfox"

-- lvim.colorscheme = "vscode"

-- lvim.colorscheme = "tokyonight-night"
-- lvim.colorscheme = "tokyodark"
-- lvim.colorscheme = "lunar"

-- lvim.colorscheme = "doom-one"
-- lvim.colorscheme = "onedarker"
-- lvim.colorscheme = "onedark"

-- lvim.colorscheme = "monokai-pro"
-- lvim.colorscheme = "midnight"
lvim.colorscheme = "everblush"


------------------------
-- PLUGINS 			  --
------------------------

lvim.plugins = {

	-- COLORSCHEMES ---------------------

	-- everblush
	{ "Everblush/nvim" },

	-- nightfox
	{ "EdenEast/nightfox.nvim" },

	-- nordic
	{ "AlexvZyl/nordic.nvim" },

	-- tokyo
	{ "tiagovla/tokyodark.nvim" },

	-- vscode
	{ "Mofiqul/vscode.nvim" },
	{ "martinsione/darkplus.nvim" },

	-- one
	{ "NTBBloodbath/doom-one.nvim" },
	{ "rmehri01/onenord.nvim" },
	{ "navarasu/onedark.nvim" },

	-- gruvbox
	{ "ellisonleao/gruvbox.nvim" },
	{ "sainnhe/gruvbox-material" },

	-- extra colorscheme
	{ "loctvl842/monokai-pro.nvim" },
	{ "fenetikm/falcon" },


	-- PLUGINS ----------------------------

	-- { "lukoshkin/trailing-whitespace" },
	{
		"folke/trouble.nvim",
		cmd = "TroubleToggle",
	},
	{
		"folke/lsp-colors.nvim",
		event = "BufRead",
	},
	{
		"WhoIsSethDaniel/toggle-lsp-diagnostics.nvim",
	}
}

--   end,
-------------
-- ONEDARK --
-------------
-- require('onedark').setup {
-- 	-- main options --
-- 	-- style = 'cool',
-- 	-- style = 'deep',
-- 	style = 'dark',
-- 	-- style = 'darker',
-- 	-- style = 'warm',
-- 	-- style = 'warmer', -- default theme style. choose between 'dark', 'darker', 'cool', 'deep', 'warm', 'warmer' and 'light'
-- 	transparent = false,       -- show/hide background
-- 	term_colors = true,        -- change terminal color as per the selected theme style
-- 	-- ending_tildes = true, -- show the end-of-buffer tildes. by default they are hidden
-- 	ending_tildes = false,     -- show the end-of-buffer tildes. by default they are hidden
-- 	cmp_itemkind_reverse = false, -- reverse item kind highlights in cmp menu

-- 	-- toggle theme style ---
-- 	toggle_style_key = nil,                                                           -- keybind to toggle theme style. leave it nil to disable it, or set it to a string, for example "<leader>ts"
-- 	toggle_style_list = { 'dark', 'darker', 'cool', 'deep', 'warm', 'warmer', 'light' }, -- list of styles to toggle between

-- 	-- change code style ---
-- 	-- options are italic, bold, underline, none
-- 	-- you can configure multiple style with comma seperated, for e.g., keywords = 'italic,bold'
-- 	code_style = {
-- 		comments = 'italic',
-- 		keywords = 'italic',
-- 		-- functions = 'italic,bold',
-- 		functions = 'italic',
-- 		strings = 'none',
-- 		variables = 'none'
-- 	},

-- 	-- lualine options --
-- 	lualine = {
-- 		transparent = true, -- lualine center bar transparency
-- 	},

-- 	-- custom highlights --
-- 	colors = {},  -- override default colors
-- 	highlights = {}, -- override highlight groups

-- 	-- plugins config --
-- 	diagnostics = {
-- 		darker = true, -- darker colors for diagnostic
-- 		undercurl = true, -- use undercurl instead of underline for diagnostics
-- 		underline = false,
-- 		background = false, -- use background color for virtual text
-- 	},
-- }

-- lvim.colorscheme = "onedark"
-- require('onedark').load()

--------------
--  NORDIC  --
--------------
-- require('nordic').setup({
-- 	-- Available themes: 'nordic', 'onedark'.
-- 	-- Onedark is WIP.
-- 	theme = 'nordic',
-- 	-- theme = 'onedark',
-- 	-- Enable bold keywords.
-- 	bold_keywords = true,
-- 	-- bold_keywords = false,
-- 	-- Enable italic comments.
-- 	italic_comments = true,
-- 	-- Enable general editor background transparency.
-- 	-- transparent_bg = false,
-- 	transparent_bg = true,
-- 	-- Nordic specific options.
-- 	-- Set all to false to use original Nord colors.
-- 	-- Adjusts some colors to make the theme a bit nicer (imo).
-- 	nordic = {
-- 		-- Reduce the overall amount of blue in the theme (diverges from base Nord).
-- 		reduced_blue = true,
-- 		-- reduced_blue = false,
-- 	},
-- 	-- Onedark specific options.
-- 	-- Set all to false to keep original onedark colors.
-- 	-- Adjusts some colors to make the theme a bit nicer (imo).
-- 	-- WIP.
-- 	onedark = {
-- 		-- Brighten the whites to fit the theme better.
-- 		brighter_whites = true,
-- 	},
-- 	-- Override the styling of any highlight group.
-- 	override = {},
-- 	cursorline = {
-- 		-- Enable bold font in cursorline.
-- 		bold = false,
-- 		-- Avialable styles: 'dark', 'light'.
-- 		theme = 'dark',
-- 		-- theme = 'light',
-- 		-- Hide the cursorline when the window is not focused.
-- 		hide_unfocused = false,
-- 		-- hide_unfocused = true,
-- 	},
-- 	noice = {
-- 		-- Available styles: `classic`, `flat`.
-- 		style = 'classic',
-- 	},
-- 	telescope = {
-- 		-- Available styles: `classic`, `flat`.
-- 		style = 'flat',
-- 	},
-- 	leap = {
-- 		-- Dims the backdrop when using leap.
-- 		dim_backdrop = false,
-- 	},
-- })
--
-----------------
-- MONOKAI-PRO --
-----------------
-- require("monokai-pro").setup({
-- 	transparent_background = true,
-- 	terminal_colors = true,
-- 	devicons = true, -- highlight the icons of `nvim-web-devicons`
-- 	styles = {
-- 		comment = { italic = true },
-- 		keyword = { italic = true }, -- any other keyword
-- 		type = { italic = true },    -- (preferred) int, long, char, etc
-- 		storageclass = { italic = true }, -- static, register, volatile, etc
-- 		structure = { italic = true }, -- struct, union, enum, etc
-- 		parameter = { italic = true }, -- parameter pass in function
-- 		annotation = { italic = true },
-- 		tag_attribute = { italic = true }, -- attribute of tag in reactjs
-- 	},
-- 	tag_attribute = { italic = true }, -- attribute of tag in reactjs
-- 	},
-- 	filter = "spectrum",             -- classic | octagon | pro | machine | ristretto | spectrum
-- 	-- Enable this will disable filter option
-- 	day_night = {
-- 	inc_search = "background", -- underline | background
-- 	background_clear = {
-- 		-- "float_win",
-- 		"toggleterm",
-- 		"telescope",
-- 		-- "which-key",
-- 		"renamer",
-- 		"notify",
-- 	}, -- "float_win", "toggleterm", "telescope", "which-key", "renamer", "neo-tree", "nvim-tree", "bufferline"
-- 	plugins = {
-- 		bufferline = {
-- 			underline_selected = false,
-- 			underline_visible = false,
-- 		},
-- 		indent_blankline = {
-- 			context_highlight = "default", -- default | pro
-- 			context_start_underline = false,
-- 		},
-- 	},
-- 	---@param c Colorscheme
-- 	override = function(c)
-- 	end,
-- })		enable = false,      -- turn off by default
-- 		day_filter = "pro",  -- classic | octagon | pro | machine | ristretto | spectrum
-- 		night_filter = "spectrum", -- classic | octagon | pro | machine | ristretto | spectrum
-- 	},
-- 	inc_search = "background", -- underline | background
-- 	background_clear = {
-- 		-- "float_win",
-- 		"toggleterm",
-- 		"telescope",
-- 		-- "which-key",
-- 		"renamer",
-- 		"notify",
-- 	}, -- "float_win", "toggleterm", "telescope", "which-key", "renamer", "neo-tree", "nvim-tree", "bufferline"
-- 	plugins = {
-- 		bufferline = {
-- 			underline_selected = false,
-- 			underline_visible = false,
-- 		},
-- 		indent_blankline = {
-- 			context_highlight = "default", -- default | pro
-- 			context_start_underline = false,
-- 		},
-- 	},
-- 	---@param c Colorscheme
-- 	override = function(c)
-- 	end,
-- })	filter = "spectrum",             -- classic | octagon | pro | machine | ristretto | spectrum
-- 	-- Enable this will disable filter option
-- 	day_night = {
-- 		enable = false,      -- turn off by default
-- 		day_filter = "pro",  -- classic | octagon | pro | machine | ristretto | spectrum
-- 		night_filter = "spectrum", -- classic | octagon | pro | machine | ristretto | spectrum
-- 	},
-- 	inc_search = "background", -- underline | background
-- 	background_clear = {
-- 		-- "float_win",
-- 		"toggleterm",
-- 		"telescope",
-- 		-- "which-key",
-- 		"renamer",
-- 		"notify",
-- 	}, -- "float_win", "toggleterm", "telescope", "which-key", "renamer", "neo-tree", "nvim-tree", "bufferline"
-- 	plugins = {
-- 		bufferline = {
-- 			underline_selected = false,
-- 			underline_visible = false,
-- 		},
-- 		indent_blankline = {
-- 			context_highlight = "default", -- default | pro
-- 			context_start_underline = false,
-- 		},
-- 	},
-- 	---@param c Colorscheme
-- 	override = function(c)
-- 	end,
-- })
