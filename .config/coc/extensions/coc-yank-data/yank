77dc57b6d99824abe616db8e707593b2|file:///Users/basilalbader/dev/C/IOI/prac.c|12|5|V|c
	    t_list  *current = NULL;
ecc15e6031ff041c2e5bcec6ea31fa04|file:///Users/basilalbader/dev/C/IOI/prac.c|24|1|V|c
	int     main(void)
	{
	    t_list  *a = NULL;
	    t_list  *b = NULL;
	    t_list  *c = NULL;
	
	    a->value = 5;
	    b->value = 6;
	    c->value = 7;
	
	    a->next = b;
	    b->next = c;
	    c->next = NULL;
	    ft_print_lst(a);
	    return (0);
	}
145ea5d1db0afca900d331ea1d8da705|file:///Users/basilalbader/dev/C/IOI/prac.c|26|13|^v|c
	*
	*
	*
c5985b28ac985d0daea9cc202024e50f|file:///Users/basilalbader/dev/C/IOI/prac.c|30|6|^v|c
	->
	->
	->
	  
	->
	->
	->
03b55caed5182e81c0db91df717a7405|file:///Users/basilalbader/dev/C/IOI/prac.c|30|6|^v|c
	va
	va
	va
	  
	ne
	ne
	ne
5583f8ef301a1adabb6631d327dd5088|file:///Users/basilalbader/dev/C/IOI/prac.c|26|15|^v|c
	= NULL
	= NULL
55a7259961b11ad65a4722aa8f9ee268|file:///Users/basilalbader/dev/C/IOI/prac.c|26|5|V|c
	    t_list  a ;
fef84783998f7e44b3b24cdb32b6acb3|file:///Users/basilalbader/dev/C/IOI/prac.c|47|1|V|c
	    a = malloc(sizeof(t_list) * 1);
cacec449923a31dc71d7974159e2f6b7|file:///Users/basilalbader/dev/42/42_Projects/libft/README.md|133|1|V|markdown
	# :bug: Issues
f0288f56c75f47ed6725f142879e7f77|file:///Users/basilalbader/dev/42/42_Projects/libft/README.md|135|1|V|markdown
	Please feel free **to create a new issue** with its title and description on the issues page of the [Libft](https://github.com/jdecorte-be/42-Libft/issues) Repository. If you have already found the solution to the problem, **I would love to review your pull request**!
698243864f3b58085a0e29102f9eb72b|file:///Users/basilalbader/dev/42/42_Projects/libft/README.md|131|1|V|markdown
	
	
	# :star: Issues
	
	If you enjoy
	Give ⭐️ if you like this project, this will help me!
cc23ff18623ae4e53b70b401b4e7ee4d|file:///Users/basilalbader/dev/42/42_Projects/libft/README.md|11|1|V|markdown
	    <br />
	    <a href="https://github.com/JohnDbe/42-Libft/blob/master/README.md"><strong>Explore the docs »</strong></a>
	    <br />
	    <br />
7ecea6b1eccaa3a79a5d907e02666600|file:///Users/basilalbader/dev/42/42_Projects/libft/README.md|9|1|V|markdown
	  <p align="center">
	    Project libft of 42 school
	  </p>
5fd1482f1fec5a37c282802fe7a5a0ef|file:///Users/basilalbader/dev/42/42_Projects/get_next_line/README.md|37|1|V|markdown
	For more detailed information, look at the [**subject of this project**](https://github.com/jdecorte-be/42-Get-next-line/blob/master/en.subject.pdf).
a6886edef4a56d1afad72eadf4185bde|file:///Users/basilalbader/dev/42/Practice/ft_split.c|6|1|V|c
		int	i;
	
		i = 0;
		while (str[i])
		{
			if (str)
			i++;
		}
63b41ef4d6ee88d0ae6f5e1fca332563|file:///Users/basilalbader/dev/42/Practice/ft_split.c|20|3|V|c
			while (str[i)
7cd4d9c47736ccd11ee0dd5986503c1c|file:///Users/basilalbader/dev/42/Practice/ft_split.c|22|3|V|c
			else
5a6fa014466f02e5f728c3cecb31a90f|file:///Users/basilalbader/dev/42/Practice/ft_split.c|26|1|V|c
				word_count += 1;
3232fa45ae03e591f879b4e526c2b204|file:///Users/basilalbader/dev/42/Practice/ft_split.c|46|1|V|c
		(void)argc;
4da8559172205a10c2ad90a80ec51b93|file:///Users/basilalbader/dev/42/Practice/ft_split.c|22|8|v|c
	ft_is_split(str[i], split)
4a24d30e047c2cdf5639485696a28844|file:///Users/basilalbader/dev/42/Practice/ft_split.c|24|1|V|c
			else
			{
370fc552e369ef8722983bc4aac9bf2c|file:///Users/basilalbader/dev/42/Practice/ft_split.c|18|1|V|c
		while (str[i] == split)
			i++;
f855fbd241bffa988cdcfbe5ce2d0685|file:///Users/basilalbader/dev/42/Practice/ft_split.c|18|2|v|c
	while (str[i] == split)
			
d2d754141ffaf3c0d24e4b0e378f3b4b|file:///Users/basilalbader/dev/42/Practice/ft_split.c|18|2|V|c
		i++;
d17be198013a242928b3027bf40b119a|file:///Users/basilalbader/dev/42/Practice/ft_split.c|13|1|V|c
		int	i;
ba48937022c318eae9303a2efa047dcb|file:///Users/basilalbader/dev/42/Practice/ft_split.c|4|1|V|c
	int	ft_is_split(char c, char split)
	{
		if (c == split)
			return (1);
		return (0);
	}
	
a954fd52a482585fda04619fc4e7d64f|file:///Users/basilalbader/dev/42/Practice/ft_split.c|4|1|V|c
	int	ft_is_split(char c, char split)
	{
		if (c == split)
			return (1);
		return (0);
	}
ff4c8ff01d544500ea4bfea43e6108c1|file:///Users/basilalbader/dev/42/Practice/ft_split.c|24|1|V|c
	
	
	
	
	
752721a77dc6598254499cbfb87f5db4|file:///Users/basilalbader/dev/42/Practice/ft_split.c|29|1|V|c
		size_t	i;
7466ef60d8d3c6beeac324102a262a9c|file:///Users/basilalbader/.vimrc|324|1|V|vim
	"colorscheme lunar
1ded293538d9ac72aca6be8f55e63186|file:///Users/basilalbader/.vim/plugged/oceanic-next/colors/OceanicNext.vim|40|1|V|vim
	  let s:yellow = ['#fac863', '221']
7dea1100964faa5ba80dfa7a9bb45258|file:///Users/basilalbader/.vim/plugged/oceanic-next/colors/OceanicNext.vim|28|21|v|vim
	fac863
37fca67b68dd880b9041f54fa5f9fc74|file:///Users/basilalbader/.vimrc|319|1|V|vim
	colorscheme ludee
157db0c56eb4460f40cb93e24ddc0662|file:///Users/basilalbader/.vim/colors/ludee.vim|38|1|V|vim
	  let s:red    = ['#ec5f67', '203']
	  let s:orange = ['#f99157', '209']
	  let s:yellow = ['#fac863', '221']
	  let s:green  = ['#99c794', '114']
	  let s:cyan   = ['#62b3b2', '73']
	  let s:blue   = ['#6699cc', '68']
	  let s:purple = ['#c594c5', '176']
	  let s:brown  = ['#ab7967', '137']
313992130c247d0f063f9d8b93190002|file:///Users/basilalbader/.vim/colors/ludee.vim|28|1|V|vim
	" let s:yellow = ['#fac863', '221']
b4d592f8d195d2741f49217ef57fc050|file:///Users/basilalbader/.vim/colors/ludee.vim|52|21|v|vim
	042e27
a7219fbfc80a15784ae9d79e870c68b5|file:///Users/basilalbader/.vimrc|219|1|V|vim
	Plug ""
8f22ee3a40d8807df34f8601c72b4aed|file:///Users/basilalbader/.vimrc|305|1|V|vim
	colorscheme doom
c4177bec34420ca3c4446f611512c70d|file:///Users/basilalbader/.vimrc|330|1|V|vim
	colorscheme batman
4d726b403883672ab70ea0ccd493677c|file:///Users/basilalbader/.vimrc|331|1|V|vim
	colorscheme ironman_dark
d5d5fe1ba1b142b9606cace7a4323c7c|file:///Users/basilalbader/.vimrc|332|1|V|vim
	colorscheme breakingbad
e900af675f6766b8fdff2da3c9bad96f|file:///Users/basilalbader/.vimrc|333|1|V|vim
	colorscheme cody
0ff047c8ec55de8fcc2c25c8115bd358|file:///Users/basilalbader/.vimrc|334|1|V|vim
	colorscheme cold
90f4d6cba2b14c83a8755ad410d9c11b|file:///Users/basilalbader/.vimrc|335|1|V|vim
	colorscheme matrix
9eb864ca412bda6cfa42f3f09084ad71|file:///Users/basilalbader/.vimrc|336|1|V|vim
	colorscheme darkmatrix
8bcefb3fc70a83ce5229766fa8e0b6c7|file:///Users/basilalbader/.vimrc|337|1|V|vim
	colorscheme neonhive
88cc90b84c5660779066bf9ea9389146|file:///Users/basilalbader/.vimrc|339|1|V|vim
	colorscheme superman
69c6934b75817edc701825cfbc984b01|file:///Users/basilalbader/.vimrc|329|1|V|vim
	"colorscheme snazzy
	"colorscheme batman
	"colorscheme ironman_dark
	"colorscheme breakingbad
	"colorscheme cody
	"colorscheme cold
	"colorscheme matrix
	"colorscheme darkmatrix
	"colorscheme neonhive
	"colorscheme nordic-aurora
	"colorscheme superman
	colorscheme topology
dc449c402b2c5594313731328787a2ea|file:///Users/basilalbader/.vimrc|330|1|V|vim
	"colorscheme batman
	"colorscheme ironman_dark
	"colorscheme breakingbad
	"colorscheme cody
	"colorscheme cold
	"colorscheme matrix
	"colorscheme darkmatrix
	"colorscheme neonhive
	"colorscheme nordic-aurora
	"colorscheme superman
	colorscheme topology
44e82379c125ef7a271169f2b0437b0e|file:///Users/basilalbader/.vimrc|219|1|V|vim
	"Plug 'romgrk/doom-one.vim'
f886edcb225f231840e3f3836d6d4780|file:///Users/basilalbader/.vimrc|218|1|V|vim
	"Plug 'i3d/vim-jimbothemes'
bf3b6c6b1721fb38600464716e863ca2|file:///Users/basilalbader/.vim/colors/ludee.vim|45|1|V|vim
	  let s:red    = ['#ec5f67', '203']
	  let s:orange = ['#f99157', '209']
	  let s:yellow = ['#E6BA95', '221']
	  let s:green  = ['#99c794', '114']
	  let s:cyan   = ['#7897AB', '73']
	  let s:blue   = ['#8CA1A5', '68']
	  let s:purple = ['#c594c5', '176']
	  let s:brown  = ['#D5BFBF', '137']
	  let s:white  = ['#EEE3CB', '15']
9b58c3493d21a873299f22d61b24222b|file:///Users/basilalbader/.vim/colors/ludee.vim|44|1|V|vim
	  let s:brown  = ['#ab7967', '137']
bce53ecdae5463c179534c1ae9c92098|file:///Users/basilalbader/.vimrc|217|1|V|vim
	Plug 'christianchiarulli/nvcode-color-schemes.vim'
2a8eb24f80e5628353f7f7e06adb26ee|file:///Users/basilalbader/.vimrc|304|1|V|vim
	"colorscheme gruvbox
9fd8a92699a462b448ae6b3dea64cc38|file:///Users/basilalbader/.vimrc|281|1|V|vim
	" gruvbox colorshemes backgrounds
	"let g:gruvbox_termcolors = 16
	"let g:gruvbox_transparent_bg = 1
	"let g:gruvbox_italic = 1
	"let g:gruvbox_contrast_dark = 'hard'
95144d7a952950bffaeb50215e9a2eb3|file:///Users/basilalbader/.vimrc|291|1|V|vim
	let g:gruvbox_material_background = 'hard'
793e94e73ba44bf1766828fa57011352|file:///Users/basilalbader/.vimrc|290|1|V|vim
	let g:gruvbox_material_enable_italic = 1
aa360dcf7eb4460f46c4c1365d0fedeb|file:///Users/basilalbader/.vimrc|290|1|V|vim
	let g:gruvbox_material_enable_bold = 1
2ad6f6df704ad19633048d60ad40dee9|file:///Users/basilalbader/.vimrc|294|1|V|vim
	let g:gruvbox_material_cursor = 'orange'
26ee1f12da5aed823cba03397c1c2f7f|file:///Users/basilalbader/.vimrc|288|1|V|vim
	"let g:gruvbox_termcolors = 16
4b523377684c2443238868b9224771cb|file:///Users/basilalbader/.vimrc|288|1|V|vim
	let g:gruvbox_material_visual = 'green background'
54359e531e06403e8a151332091d624d|file:///Users/basilalbader/.vimrc|288|1|V|vim
	let g:gruvbox_material_visual = 'red background'
8985f6c27ac9e917fbf4c78f7367da57|file:///Users/basilalbader/dev/42/Practice/ft_split.c|27|1|V|c
		char	**tab;
		size_t	word_count;
		size_t	i;
		size_t	j;
f4c833b2818f19a744bd855ab2253573|file:///Users/basilalbader/.vimrc|289|1|V|vim
	let g:gruvbox_material_visual = 'reverse'
922aa0146a960c5e3108d650210eae88|file:///Users/basilalbader/dev/42/Practice/ft_split.c|4|1|V|c
	int	ft_count_words(char const *str, char split)
	{
		size_t	word_count;
		size_t	i;
	
		word_count = 0;
		i = 0;
		while (str[i])
ad4eac6eb19a228fa096f5c6556041be|file:///Users/basilalbader/.vimrc|295|1|V|vim
	let g:gruvbox_material_diagnostic_text_highlight = 1
7f86af04fedb288a3e2aedd03fccdd57|file:///Users/basilalbader/.vimrc|293|1|V|vim
	let g:gruvbox_material_foreground = 'original'
d70221caa8d19ac4cfaa37ee22aead27|file:///Users/basilalbader/.vimrc|309|1|V|vim
	"Gruvbox BG Color : #181a1a
14235aaf715a8a4467578e7ad3298b46|file:///Users/basilalbader/.vimrc|320|1|V|vim
	colorscheme gruvbox-material
1559dc2f972f606028179132aa794242|file:///Users/basilalbader/dev/42/42_Projects/get_next_line/README.md|9|1|V|markdown
	<p align="center">
		<img alt="GitHub code size in bytes" src="https://img.shields.io/github/languages/code-size/jdecorte-be/42-Get-next-line?color=lightblue" />
		<img alt="Number of lines of code" src="https://img.shields.io/tokei/lines/github/jdecorte-be/42-Get-next-line?color=critical" />
		<img alt="Code language count" src="https://img.shields.io/github/languages/count/jdecorte-be/42-Get-next-line?color=yellow" />
		<img alt="GitHub top language" src="https://img.shields.io/github/languages/top/jdecorte-be/42-Get-next-line?color=blue" />
		<img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/jdecorte-be/42-Get-next-line?color=green" />
	</p>
b3c5e30d939e16d7c7f608fa27346821|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/README.md|4|39|v|markdown
	The Last Algorithms Course You'll Need
962545a9d5cd268a321b5e251d13c7f9|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/README.md|16|1|V|markdown
	This course is by far the best I've come by!
7bde1a988215f2586d2a82d10857f3aa|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|24|1|V|markdown
	``````````````````````````````````````````````````````````
77a777223078892f7f03d019d585a6da|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|23|1|V|markdown
	````````````````````````````````kllkjkjadsflkjads
d54c536ea38ed8fcd89f95d29d75ee3e|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|23|1|V|markdown
	adksfjasd````````````````````````````````
bc87f4d9951632af47e1896127298355|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|24|1|V|markdown
	``Hello world
e649ff83b6d35c3cc9a7d251437f9260|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|25|1|V|markdown
	#includ <stdio.h>
81eeab9506186e2dca8faefa78d54067|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|24|1|V|markdown
	Example:
e5dbf2fe184776a48767135862f06bf3|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|24|1|V|markdown
	```C
a121ed305e47c77fc955a4234a73da9b|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|43|1|V|markdown
	
	```markdown-runner
	zsh:1: command not found: C
	```
	
1c7a25d78a5758017b66fbb20179b237|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|43|1|V|markdown
	
	```markdown-runner
	zsh:1: command not found: C
	```
c55a1be1e581184f4323e059fc9fa076|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|53|1|V|markdown
	```markdown-runner
	zsh:1: command not found: C
	```
09a5c51aafcd73c3e3880985678842cb|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|28|1|V|markdown
	int	sum_char_ascii_code(char *str)
	{
		int	i;
		int	tot;
	
		tot = 0;
		i = 0;
		while (str[i])
		{
			tot += str[i];
			i++;
		}
		return (tot);
	}
	
	int	main(void)
	{
		char	str[] = "Hello World";
		int		tot;
	
		tot = sum_char_ascii_code(str);
		printf("%d\n", tot);
	}
8b6f1a002e1a5c79d5a477e88009fea5|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|42|1|V|markdown
	
	int	main(void)
	{
		char	str[] = "Hello World";
		int		tot;
	
		tot = sum_char_ascii_code(str);
		printf("%d\n", tot);
	}
5e505f6d9c2d703e471b4f4213e6889f|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|22|1|V|markdown
	### 1. Growth is with respect to the input
e24af6184e5f018adc27787d03234c70|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|24|1|V|markdown
	```C
	#include <stdio.h>
	#include <string.h>
	
	int	sum_char_ascii_code(char *str)
	{
		int	i;
		int	tot;
	
		tot = 0;
		i = 0;
		while (str[i])
		{
			tot += str[i];
			i++;
		}
		return (tot);
	}
	```
516301f2fb69c178bcf4a74f7e199b39|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|62|1|V|markdown
		i = 0;
		while (str[i])
		{
			tot += str[i];
			i++;
		}
8b0f0ea73162b7552dda3c149b6c045d|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|81|1|V|markdown
	<br>
b751b9c173c24ac27d89e5ab130310e8|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|52|1|V|markdown
	```C
	#include <stdio.h>
	#include <string.h>
	
	int	sum_char_ascii_code(char *str)
	{
		int	i;
		int	tot;
	
		tot = 0;
		i = 0;
		while (str[i])
		{
			tot += str[i];
			i++;
		}
	
		i = 0;
		while (str[i])
		{
			tot += str[i];
			i++;
		}
		return (tot);
	}
	```
dad4eb0d408bef0cb95a3fa955607f6b|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|107|1|V|markdown
	
		i = 0;
		while (str[i])
		{
			tot += str[i];
			i++;
		}
5fd3c3daeb0c6614262ed3c02bbb88da|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|112|1|V|markdown
	In Big O we often consider the worst case:<br>
	
	Especially in interviews (i have never been asked for best, average,
	and worst case, just worst case).
	
	E = 69
	
	Therefore any string with E in it will terminate early
	(unless E is the last item in the list).
	
	ITS STILL O(N)
043107f1ca275bd29344c192f35fcdaa|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|112|1|V|markdown
	In Big O we often consider the worst case:<br>
	
	Especially in interviews (i have never been asked for best, average,
	and worst case, just worst case).
e6f8833333f498d2066ad9b6e3907957|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|125|1|V|markdown
	
	E = 69
	
	Therefore any string with E in it will terminate early
	(unless E is the last item in the list).
	
	ITS STILL O(N)
f3b27b5a902faa60c36b97e1055890cf|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|140|1|V|markdown
	![Big-O Complexity](./Pix/)
c5dfe3366a805eeb207db3a1106e3885|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|143|4|^v|markdown
	>
	>
	>
0655ae21f702c70c3332a33c21e0754f|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|143|2|^v|markdown
	\t
	\t
	\t
d645ac6e32eb0d1e07dfaded26848cee|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|142|1|V|markdown
	• O(1):
	>Means constant time.<br>
	>No matter how big the input is, it does the same set of
	>operations every single time. It's instant.
b15e2cfb42c1de41e08178f76b6a1af5|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|149|1|V|markdown
	>No matter how big the input is, it does the same set of
	>operations every single time. It's instant.
20bfa560ebc9734ccdd7649113e95670|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|142|1|V|markdown
	• O(1):
	>Means constant time.<br>
	>No matter how big the input is, it does the same set of
	>operations every single time. It's instant.
	
	• O(logn):
	>Also known as base-2 or /2<br>
	>The algorithm's maximum running time is proportional to the logarithm of the input size.<br>
	
	
115dbe1db3b5dc7da556fad50fe17436|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|146|1|V|markdown
	``````
0b46c86cfb78be38dc99640c7934357a|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|103|1|V|markdown
	```C
	#include <stdio.h>
	#include <string.h>
	
	int	sum_char_ascii_code(char *str)
	{
		int	i;
		int	tot;
	
		tot = 0;
		i = 0;
		while (str[i])
		{
			if (str[i] == 'E')
				return (tot);
			tot += str[i];
			i++;
		}
		return (tot);
	}
	```
af06c7e6afac80579072968645afe399|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|159|1|V|markdown
			if (str[i] == 'E')
				return (sum);
			sum += str[i];
			i++;
		}
c83f17dcf1a7474866f9b02628b83ab8|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|157|1|V|markdown
		while (str[i])
		{
		return (tot);
ee7343c7fa9bd4dcf822a850aa4aa131|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|147|1|V|markdown
	### O(N^2)
	```C
	#include <stdio.h>
	#include <string.h>
	
	int	sum_char_ascii_code(char *str)
	{
		int	i;
		int	j;
		int	sum;
	
		sum = 0;
		i = 0;
		while (str[i])
		{
			j = 0;
			while (str[j])
			{
				sum += str[j];
				j++;
			}
			i++;
		}
		return (sum);
	}
	```
19705f8e187a625d2e6921d707343607|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|182|1|V|markdown
		int	j;
08734d8b116f73ecb4bf1c08151b4eab|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|190|1|V|markdown
			j = 0;
			while (str[j])
			{
				sum += str[j];
				j++;
			}
d1397da9554d1110ee8a2ea1d4b05711|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|199|4|V|markdown
				sum += str[j];
ae1761e95a1db186312fc3afc337ad85|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/1_time_and_space_complexity/README.md|1|1|V|markdown
	# **************************************************************************** #
	#                                                                              #
	#                                                         :::      ::::::::    #
	#    README.md                                          :+:      :+:    :+:    #
	#                                                     +:+ +:+         +:+      #
	#    By: baalbade <baalbade@student.42.fr>          +#+  +:+       +#+         #
	#                                                 +#+#+#+#+#+   +#+            #
	#    Created: 2022/09/21 13:28:51 by baalbade          #+#    #+#              #
	#    Updated: 2022/09/21 14:01:14 by baalbade         ###   ########.fr        #
	#                                                                              #
	# **************************************************************************** #
779c5af1c6532bd2c4966e02c459fffb|file:///Users/basilalbader/dev/Prac/JS/kata-machine/src/day1/LinearSearchList.ts|6|1|V|typescript
	            return true;
5e386bc666bd91c6bf9fc510e8e839bb|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/2_Linear_Search/linear_search.c|2|1|V|c
	#include <string.h>
b0a34209f40e2eaeaf10d755c6fdf144|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/2_Linear_Search/linear_search.c|13|2|V|c
		while (i < )
77821fb0f0a6169061bd377b4e9a8c39|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/2_Linear_Search/linear_search.c|4|1|V|c
	int		
9e428cbac2b1ea5373ea6dee56c9bb58|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/2_Linear_Search/linear_search.c|7|2|V|c
		int	arr_size;
962a8ada0242b9f3ee0e2825a7c5d10a|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/2_Linear_Search/linear_search.c|8|1|V|c
		arr_size = sizeof(haystack) / sizeof(haystack[0]);
7bb0edd98f22430a03b67f853e83c2ca|file:///Users/basilalbader/.vim/coc-settings.json|30|8|V|json
	        
45b1f01cb6efa555c287e6f7a6ad4687|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/2_Linear_Search/README.md|14|1|V|markdown
	{
		int	i;
	
	}
6459e4332ccb0cbe438868adc9d78989|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/README.md|16|1|V|markdown
	```
	log2(N) = k
	```
	
7a519f038f2fac6f0d702c45de07fa70|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/README.md|21|1|V|markdown
	>NOTE: If the input halves at each step, its likely O(logN) or O(NlogN)
fbecfd29d219ed42e26cfa50e128dae7|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/README.md|25|1|V|markdown
	>NOTE: 
2945d646a4d2854c0b3597f0f64cb909|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/README.md|32|1|V|markdown
		mid_point = (lo + (hi - lo) / 2);
		value = arr[mid_point];
		if (value == needle)
			return (true);
		else if (value > mid_point)
			lo = mid_point + 1;
		else
			hi = mid_point;
fe037c1251f6177336c7f69f6c20d5c8|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/binary_search.c|16|1|V|c
			hi = mid_point;
3a3cf64e32476669ebd654ab55216930|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/binary_search.c|15|1|V|c
			lo = mid_point + 1;
d2ea3dd60b7a520fcd0370c5e6047aaf|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/binary_search.c|12|1|V|c
		mid_point = (lo + (hi - lo) / 2);
		value = haystack[mid_point];
		if (value == needle)
			return (true);
		else if (value > needle)
			hi = mid_point;
		else
			lo = mid_point + 1;
961e17436ba82e8ef37bf2157a0e24df|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/binary_search.c|9|1|V|c
		do {
0c6c0a73e18eb5116836803c2375aff3|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/binary_search.c|17|1|V|c
		} while (lo < hi);
35ebf584f822790b9bb4cafe75e88348|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/binary_search.c|13|1|V|c
			mid_point = (lo + (hi - lo) / 2);
			value = haystack[mid_point];
			if (value == needle)
				return (true);
			else if (value > needle)
				hi = mid_point;
			else
				lo = mid_point + 1;
774fe742ec32810f0b64b43e0b500cba|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/binary_search.c|21|1|V|c
			mid_point = (lo + (hi - lo) / 2);
			value = haystack[mid_point];
			if (value == needle)
				return (true);
			else if (value > needle)
				hi = mid_point;
			else
				lo = mid_point + 1;
		} while (lo < hi);
14e2991f5a10d0c90fa436937eb18501|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/binary_search.c|9|1|V|c
		lo = haystack_size;
a3a84317b3dc564e45cbba2bfe6e842f|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/binary_search.c|8|1|V|c
		int	lo;
		int	hi;
5f24950fcffad3c19b304bfc5da69b26|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/binary_search.c|13|1|V|c
		while (lo < hi)
29ba1b203eb970bcf20c4287c6ae56af|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/binary_search.c|2|1|V|c
	#include <stdbool.h>
399810e15e94eafe3c33db9b7222e5ef|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/binary_search.c|10|1|V|c
		int		value;
e93e1f5eb644695e44d2ad4edf5bac63|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/binary_search.c|10|1|V|c
		double	mid_point;
c342bcf69b35d1479323b86b8eefb1a4|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/binary_search.c|3|1|V|c
	#include <math.h>
3c74509858e568a0b91db101c073f408|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/binary_search.c|17|3|V|c
			mid_point = length;
85162511343bbeccd071d0a4276554c9|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/binary_search.c|9|2|V|c
		double	length;
f98d988db9e099448ba8351ed5fc1832|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/binary_search.c|24|3|V|c
			lo++;
4d5507bbaf71eef5577cbf774780767f|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/3_Binary_Search/binary_search.c|32|1|V|c
		printf("%d\n", size);
dc6f7a4614e8916f63b76a58f041dfce|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/4_The_two_crystal_ball_problem/two_crystal_ball.c|10|2|V|c
		arr_size = sizeof(arr) / sizeof(arr[0]);
ca6c7860e4a18c9f5b0ad85ea402daa3|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/4_The_two_crystal_ball_problem/two_crystal_ball.c|30|1|V|c
	
	
	int	main(void)
	{
		return (0);
	}
0fc9373de45fc5816507c00de8a90a4b|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/5_Bubble_Sort/bubble_sort.c|11|1|V|c
			j = 0;
			while ()
	
e5e18c261b0c01f862fa11adf83438f5|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/5_Bubble_Sort/bubble_sort.c|18|1|V|c
			if (arr[i] > arr[i + 1])
			{
				temp = arr[i];
				arr[i] = arr[i + 1];
				arr[i + 1] = temp;
			}
6f2f280cbd0fd655d08511d61c157b57|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/5_Bubble_Sort/bubble_sort.c|35|1|V|c
		while (i < arr_size)
		{
			printf("%d ", arr[i]);
			i++;
		}
84f1a997c392533a90771700a715b41d|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/5_Bubble_Sort/bubble_sort.c|34|1|V|c
		printf("Before Bubble Sort:\n");
a9dee87fbe5246655ff8a5306489006f|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/README.md|27|22|v|markdown
	[<b>The Primeagen<b>](https://github.com/ThePrimeagen).<br>
af75ee379f8b48240b67e9a363c761e9|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/README.md|33|1|V|markdown
	• [The Primeagen](https://github.com/ThePrimeagen).<br>
3a57539e7a0aa8e9adad98fa1f3a1264|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/README.md|10|1|V|markdown
	## Why Linked Lists
233c375dd108c5b7472f7534264a1f13|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/README.md|40|1|V|markdown
	* Singly Linked List
2f12781275c05a0324690bade67baf5a|file:///Users/basilalbader/dev/42/42_Projects/libft/README.md|23|1|V|markdown
	* [What's this Repo?](#sparkles-What-is-Libft?)
ab387b657c90a5efe4ee8ff91ecacde6|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/README.md|44|1|V|markdown
	### Singly Linked List
	
	```c
	struct	node {
		int	value;
		struct node *next;
	}
	```
229e5cdf0b6249f53022725b2cf08b9f|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/README.md|58|1|V|markdown
		struct node *next;
4d2dcb10b4e54f705dfdda99f1089a17|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/README.md|52|1|V|markdown
	### Doubly Linked List
	```c
	struct	node {
		int	value;
		struct node *next;
		struct node *prev;
	}
	```
7e1f8d8738b2e80c55c8269fdc120cbf|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/README.md|66|2|V|markdown
		struct node *prev;
32384e52b4c41584d3e7e017a0b0bbe1|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/README.md|63|1|V|markdown
	struct	node {
		int	value;
		struct node *next;
	}
	
	
	```
249eea292df1614723338209c27f9186|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/README.md|62|1|V|markdown
	```c
0c19085ae4d926760ee7e5140f315ae2|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/README.md|25|1|V|markdown
	Example: 
	In a system, if we maintain a sorted list of IDs in an array
	id[] = [1000, 1010, 1050, 2000, 2040]. 
	<br>
	<br>
	If we want to insert a new ID 1005, then to maintain the sorted order,
	we have to move all the elements after 1000 (excluding 1000). 
	<br>
	<br>
	Deletion is also expensive with arrays until unless some special techniques are used.
	For example, to delete 1010 in id[], everything after 1010 has to be moved due
	to this so much work is being done which affects the efficiency of the code.
dc05f9c8184e1bcaa23175366f40bc6d|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/README.md|33|1|V|markdown
	• [geeksforgeeks](https://www.geeksforgeeks.org/)<br>
a9c5427ea1ad48895c9ea08210019a5a|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/single_linked_list.c|11|1|V|c
		Node	*a;
6a6907da82078d26dbd45531dd98a8e0|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/single_linked_list.c|15|1|V|c
		a->value = 10;
74331e1311f1e3c60cf97115aa51737c|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/single_linked_list.c|16|1|V|c
		b->value = 10;
ecc08dfeaff2f23e20794b73ee2168bd|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/single_linked_list.c|19|1|V|c
		a->next = b;
7cd19cad4a2f6fe9a53428a53464da36|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/single_linked_list.c|20|1|V|c
		b->next = c;
6011ae2743d8550315fd1a96bb4e3789|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/single_linked_list.c|19|2|V|c
		i = 0;
7185016be4da27d77a8972583afe8a23|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/single_linked_list.c|12|2|V|c
		int		i;
f7642f58f70c0ca4fb3936b2b7db48e5|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/single_linked_list.c|22|2|V|c
			i++;
ae20da8b15bb55b87c0e87a6015ce2da|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/single_linked_list.c|1|1|V|c
	#include <stdio.h>
f25ac55074711d53c7ff2d5883590030|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/single_linked_list.c|33|2|V|c
		a = (Node *)malloc(sizeof(Node) * 1);
be2e3a9f21c39b2029afc2fbf5bfe7ab|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/single_linked_list.c|33|1|V|c
		a = (Node *)mallod(sizeof(Node));
366a9531cb7d2e4fddfe9303c4e8c4e8|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/single_linked_list.c|33|1|V|c
		a = (Node *)malloc(sizeof(Node));
45e32ab349a12af870609da0f08aa84e|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/doubly_linked_list.c|42|1|V|c
		a->next = b;
		b->next = c;
		c->next = NULL;
173460bc871bdbac226afcddb1b09c19|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/doubly_linked_list.c|11|1|V|c
	void	print_list(Node *lst)
	{
		Node	*current;
		char	name;
	
		if (!lst)
			return ;
		current = lst;
		name = 'a';
		while (current != NULL)
		{
			printf("Node[%c]: %d\n", name, current->value);
			current = current->next;
			name++;
		}
	}
90f3b25ae9bc1818723894ac263ee4c9|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/doubly_linked_list.c|36|2|V|c
		name = 'a';
c82983aff535a11d7ef9a4e5784de5e5|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/doubly_linked_list.c|36|1|V|c
		while (current != NULL)
		{
			printf("Node[%c]: %d\n", name, current->value);
			current = current->prev;
			name--;
		}
1e6880f1bcd5d8bf007de779ed7f3294|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/doubly_linked_list.c|34|1|V|c
	void	print_prev(Node *lst)
	{
		Node	*current;
		char	name;
	
		if (!lst)
			return ;
		current = lst;
		while (current != NULL)
		{
			printf("Node[%c]: %d\n", name, current->value);
			current = current->prev;
			name--;
		}
	}
bd754620c3f9d43af6cafd77ef0ef599|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/doubly_linked_list.c|38|2|V|c
			printf("Node[%c]: %d\n", name, current->value);
6bdf7a6b5265d5bbe74618790758413d|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/doubly_linked_list.c|39|3|V|c
			name--;
a93b7d859ba113d69ad6cc8cde636bd0|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/doubly_linked_list.c|69|1|V|c
		print_list(a);
a2d305120dac25ddb66255af317449f5|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/doubly_linked_list.c|38|2|V|c
		if ()
53977e1893737d926cf424e4608f3b7d|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/doubly_linked_list.c|38|1|V|c
		while (current != NULL)
886b7b9acd4776bfa450b57daf6398e8|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/doubly_linked_list.c|42|1|V|c
		while (current != NULL)
			current = current->next;
a0c5aa05cb9c5e653b40bf88dabf577c|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/doubly_linked_list.c|43|2|V|c
		i = 4;	
bc3dda1ed4fa80faff777da7be41b00f|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/doubly_linked_list.c|47|2|V|c
			i--;
8202f814b9d5cf25690eb9f3776e58c0|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/circular_linked_list.c|13|1|V|c
		t_list	*head;
4e640f3e61cee1f8c52565da7eef7809|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/circular_linked_list.c|18|1|V|c
		a = (t_list *)malloc(sizeof(t_list) * 1);
2d9101f25d280ffe679ced46d5014c53|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/6_Linked_lists/circular_linked_list.c|22|1|V|c
		a->value = 1;
3792ce9f16010469075da95b35c213d9|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/README.md|34|1|V|markdown
	• [Programiz](https://www.programiz.com/c-programming)<br>
ac1a5f185186601fd525afdec16ffa5b|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/7_Queue/README.md|26|1|V|markdown
	• `Front` and `Rear` pointers keep the record of the first and last element in the queue.<br>
19ccf46e28c01055a7a69e616a045abc|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/7_Queue/queue.c|16|1|V|c
		insert_into_queue(1);
79703ab5fdcac2a315bb685801c2e70d|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/7_Queue/queue.c|18|1|V|c
		insert_into_queue(3);
9020111242ad1c3ba8e2058c48dcc91e|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/7_Queue/delete_from_queue.c|42|1|V|c
		delete_from_queue();
fccf5cd736c22384ffb890beacf54d15|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/7_Queue/delete_from_queue.c|35|1|V|c
		for (i = 0; i < count; i++) {
			printf("%d ", queue[i]);
		}
a3aeee9db9f0d9d08263af22dce878c5|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/7_Queue/delete_from_queue.c|44|1|V|c
		printf("\n");
7ab5a57db06cd12b841d73c4ea405fdd|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/7_Queue/delete_from_queue.c|50|1|V|c
		printf("\n");
		printf("queue[0]: %d\n", queue[0]);
097654eb540a6467b7f730d087f1b09f|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/7_Queue/delete_from_queue.c|52|1|V|c
		printf("\n");
		printf("queue[4]: %d\n", queue[4]);
d43773ab7583a68540f3f126070cf4f7|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/7_Queue/enqueue.c|16|2|^v|c
	insert_into_q
	insert_into_q
	insert_into_q
	insert_into_q
	insert_into_q
da26599df0b6c6a9088823f5126cfb9e|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/7_Queue/enqueue.c|7|1|V|c
	int	front = -1;
2431f8f2fb4522b4e4a15795ddce3bdc|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/7_Queue/enqueue.c|9|1|V|c
	int	rear = -1;
a41fb61bfc3a75a24d991c13b5d30690|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/7_Queue/enqueue.c|12|1|V|c
		if (rear == SIZE - 1)
			return ;
9e47b1c682a17864980a02567710680f|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/7_Queue/queue.c|9|1|V|c
		node *head;
8250f75bf890c52026d67854f56d89b3|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/7_Queue/queue.c|16|1|V|c
		q->head = NULL;
0a88dc6fb0ed74388391b5bf105dfb39|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/7_Queue/queue.c|26|1|V|c
			new_node->value = value;
3efc2176a27704fe06ad08ad23b11a91|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/7_Queue/dequeue.c|33|1|V|c
		insert_into_queue(1);
		insert_into_queue(2);
29eed043d1c9094bcc02a56d408d6a5f|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/7_Queue/dequeue.c|33|2|^v|c
	insert_into_queue(1);
	insert_into_queue(2);
	insert_into_queue(3);
	insert_into_queue(4);
	insert_into_queue(5);
ddf2228fff4c05f4e6a97daef5da376c|file:///Users/basilalbader/dev/42/data_structures_and_algorithms_in_C/7_Queue/dequeue.c|33|9|^v|c
	insert_into_queue
	insert_into_queue
	insert_into_queue
	insert_into_queue
	insert_into_queue
6e081768470791f6355dd119fe703251|file:///Users/basilalbader/dev/42/42_Projects/get_next_line/README.md|9|1|V|markdown
	<h3 align="center">
		<a href="#%EF%B8%8F-about">About</a>
		<span> · </span>
		<a href="#%EF%B8%8F-usage">Usage</a>
		<span> · </span>
		<a href="#-testing">Testing</a>
	</h3>
c1e711a68a95a177303053d93e898a24|file:///Users/basilalbader/dev/42/42_Projects/get_next_line/README.md|44|1|V|markdown
	You only have to edit the get_next_line.c file and uncomment the main function and headers inside it.
b16905985bd468969e5d901404e415a7|file:///Users/basilalbader/dev/42/Practice/fun.c|14|1|V|c
		printf("res: %d\n", fun());
606bcdcf58111d1049f3a42d87373b46|file:///Users/basilalbader/dev/42/Practice/fun.c|10|2|V|c
		return (res);
c59e788a830d789aac70305da2c34931|file:///Users/basilalbader/dev/42/Practice/fun.c|14|1|V|c
		printf("res: %d\n", fun());
		printf("res: %d\n", fun());
		printf("res: %d\n", fun());
07033b8aa6df8348f1a143cadd414c28|file:///Users/basilalbader/dev/42/Practice/fun.c|14|1|V|c
		fun();
1aeb1b4d80445c063c1b3f576edf4b4e|file:///Users/basilalbader/dev/42/Practice/fun.c|7|2|V|c
		res = 0;
3b0ff62e8c74e22e83274ba514302227|file:///Users/basilalbader/dev/42/Practice/fun.c|21|1|V|c
		fun();
		fun();
		fun();
3044f928ab11f5aab0881cc86d62f066|file:///Users/basilalbader/dev/42/Practice/fun.c|21|1|V|c
		total++;
63c148cf9c2b7ed4b5d57b47a55f959d|file:///Users/basilalbader/dev/42/Practice/fun.c|25|1|V|c
		int	i;
	
		i = 0;
		while (i < 10)
		{
			fun();
			i++;
		}
5f11890edc985a421fc31083659e2f49|file:///Users/basilalbader/dev/42/Practice/fun.c|30|1|V|c
			fun();
057bde1d5d18f3eecc2c52eaebb70f16|file:///Users/basilalbader/dev/42/Practice/fun.c|28|1|V|c
		while (i < 10)
		{
			log_message("read data");
			i++;
		}
efed491793e0289e63411155edfc7235|file:///Users/basilalbader/dev/42/Practice/fun.c|25|1|V|c
		int	i;
		int	j;
		int	k;
	
		i = 0;
		j = 0;
		k = 0;
		while (i < 10)
		{
db647873709fcd2141ac201b7a0bb928|file:///Users/basilalbader/dev/42/Practice/fun.c|26|3|V|c
			while (j < 10)
7177a849efa7e02af2280e21e7a411ae|file:///Users/basilalbader/dev/42/Practice/fun.c|27|4|V|c
				while (k < 10)
2c48eabd7a36b0deda83e6373923e448|file:///Users/basilalbader/dev/42/Practice/fun.c|27|4|V|c
				{
a2fbff6837ac40c556521d9f3b050a33|file:///Users/basilalbader/dev/42/Practice/fun.c|28|5|V|c
					k++;
40985e24734e7c2edc3ce26e56f94064|file:///Users/basilalbader/dev/42/Practice/fun.c|28|4|V|c
				}
4128d64ac166ec0d68e1185529da2ade|file:///Users/basilalbader/dev/42/Practice/fun.c|28|4|V|c
				j++;
cc9067c2ee470dc248b14b194209a34e|file:///Users/basilalbader/dev/42/Practice/fun.c|23|1|V|c
	
	
	
	
	
	
0a037265e771f486fc4832de1eba2d80|file:///Users/basilalbader/dev/42/42_Projects/get_next_line/get_next_line_utils.c|27|1|V|c
		while (s1[i])
		{
			final_str[i] = s1[i];
			i++;
		}
a80139c5ddf048321eb1b45b6fd6f8ff|file:///Users/basilalbader/dev/42/Practice/strchr.c|14|2|V|c
		return ;
49ed98e258e76f95bff2afccf73610b2|file:///Users/basilalbader/dev/42/Practice/ft_split.c|28|2|V|c
		int	word_count;
127d65d77b1751ed65f9b24870b145bb|file:///Users/basilalbader/dev/42/Practice/ft_split.c|32|2|V|c
		word_count = ft_count_words(str, split);
437314d892e9791536d3abf5b563ac37|file:///Users/basilalbader/dev/42/Practice/ft_split.c|60|2|V|c
		size_t	word_count;
0fecff617ebcec52d097ade5fc2a2968|file:///Users/basilalbader/dev/42/Practice/ft_split.c|63|2|V|c
		word_count = ft_count_words(s, c);
aa50957954d213e36ad2c6a4ecde19b2|file:///Users/basilalbader/dev/42/Practice/ft_split.c|61|2|V|c
		char	*final_str;
f4fe91144862e54aa7b1f2800e1e6165|file:///Users/basilalbader/dev/42/Practice/ft_split.c|64|2|V|c
		final_str = (char *)malloc(sizeof(char) * strlen(src))
fb9687ac2bca4136c79c22f53deb4553|file:///Users/basilalbader/dev/42/Practice/ft_split.c|62|2|V|c
		int		j;
51498815b48fe71b78be508dbbc0b5d8|file:///Users/basilalbader/dev/42/Practice/ft_split.c|82|1|V|c
		size_t	j;
2ac9c6ebdc86b1d5b092cb4f2cfc4d66|file:///Users/basilalbader/dev/42/Practice/ft_split.c|100|4|V|c
				ft_strcpy(tab[k], s,)
a46e107f6821ac9e8fa27717d0020006|file:///Users/basilalbader/dev/42/Practice/ft_split.c|107|2|V|c
			i = 
744fd729c804041a23a04041231fe419|file:///Users/basilalbader/dev/42/Practice/ft_split.c|106|1|V|c
				tab[k][i] = s[j];
				j++;
				i++;
				k++;
66617ef35be8d354e44b1ab32179f150|file:///Users/basilalbader/dev/42/Practice/ft_split.c|110|1|V|c
			k++;
3844f4691977cab5b2a79f4a461f8ba2|file:///Users/basilalbader/dev/42/Practice/ft_split.c|80|2|V|c
		char	*temp;
9d8caa5deae94be952c3d418265e506d|file:///Users/basilalbader/dev/42/Practice/ft_split.c|82|2|^v|c
	size_t	
	size_t	
1149d6161c63f717fa1390efbaafec0d|file:///Users/basilalbader/dev/42/Practice/ft_split.c|59|1|V|c
	/* Copy to dst from start point in src till n */
	char	*ft_strcpy(char *dst, const char *src, int n, int start)
	{
		int		i;
	
		if (!src || !dst)
			return (NULL);
		i = 0;
		while (i < n)
		{
			dst[i] = src[start];
			i++;
			start++;
		}
		dst[i] = '\0';
		return (dst);
	}
7a4efafccbe773729f43423277700129|file:///Users/basilalbader/dev/42/Practice/ft_split.c|81|1|V|c
			i = 0;
1525a6575b2a2a46580bb55bf456ce9d|file:///Users/basilalbader/dev/42/Practice/ft_split.c|93|1|V|c
				k++;
				i = 0;
7b7f1ef3004ba7b0ca149b0d97305097|file:///Users/basilalbader/dev/42/Practice/ft_split.c|94|1|V|c
			k++;
			i = 0;
b8ad1735b578ecdaebe27ebfcdb6999d|file:///Users/basilalbader/dev/42/Practice/ft_split.c|62|2|V|c
		int		*word_len;
98fb590881c8dc4d3aba3a4c2e582fe1|file:///Users/basilalbader/dev/42/Practice/ft_split.c|90|1|V|c
			tab[i] = (char *)malloc(sizeof(char) * (word_len[i] + 1));
			if (!tab[i])
				return (NULL);
4f6ee282ca47c652ffbaa7c53cd6767a|file:///Users/basilalbader/dev/42/Practice/ft_split.c|87|2|V|c
		word_len = ft_word_len(s, c);
c9c56679133d48abe93e409e52930be9|file:///Users/basilalbader/dev/42/Practice/ft_split.c|88|1|V|c
		i = 0;
		while (i < ft_count_words(s, c))
		{
			tab[i] = (char *)malloc(sizeof(char) * (word_len[i] + 1));
			if (!tab[i])
				return (NULL);
			i++;
		}
d6272cb1af7da50af0bd448324274788|file:///Users/basilalbader/dev/42/Practice/ft_split.c|72|1|V|c
			tab[i] = (char *)malloc(sizeof(char) * (word_len[i] + 1));
7933da61f0d7fdc481456752a9c47fbe|file:///Users/basilalbader/.tmux.conf|8|1|V|tmux
	unbind C-b
ab4e8182f03ea8be9b14f6ae6496b1fa|file:///Users/basilalbader/.tmux.conf|19|1|V|tmux
	# Switch panes using Alt-arrow without prefix
	bind -n M-Left select-pane -L
	bind -n M-Right select-pane -R
	bind -n M-Up select-pane -U
	bind -n M-Down select-pane -D
fb0625aed8494091b4a2db2cba6155e2|file:///Users/basilalbader/.tmux.conf|28|1|V|tmux
	bind -n M-Up select-pane -U
	bind -n M-Down select-pane -D
fe9c217716210f1359503a32625e0d23|file:///Users/basilalbader/.tmux.conf|4|1|V|tmux
	set -g @plugin "arcticicestudio/nord-tmux"
acd3f446c3859c346167577fd8eadfcc|file:///Users/basilalbader/.tmux.conf|46|1|V|tmux
	 #Automatically rename new windows
	#set -g automatic-rename on
94ba135e639b63af2558e734506f5322|file:///Users/basilalbader/.tmux.conf|49|1|V|tmux
	 #Set status position on bottom of screen
	#set-option -g status-position bottom
	
	 #Set status main colors
	#set-option -g status-style bg=grey15,fg=white
	
	 #Set left status info
	#set-option -g status-left '#[fg=colour117]#(echo "Session: ")#[fg=colour202]#{session_name}'
	#set-option -g status-left-length 20
	
	 #Set position of windows list to centre
	#set-option -g status-justify centre
	
	 #Set right status info
	#set-option -g status-right '#[fg=colour117]#(date)'
	#set-option -g status-interval 1
	
	 #Set window formating
	#set-option -g window-status-format '#[fg=colour120]#{window_index}#[fg=colour120]#(echo ":")#[fg=colour120]#{window_name}#[fg=colour120]#{window_flags}'
	#set-option -g window-status-current-format '#[fg=colour120]#{window_index}#[fg=colour120]#(echo ":")#[fg=colour120]#{window_name}#[fg=colour120]#{window_flags}'
1daea7b2e23c3d0638bd4a7fe586385e|file:///Users/basilalbader/.tmux.conf|34|1|V|tmux
	# Automatically autoreload Config on change
	set-option -g @tmux-autoreload-configs '/path/to/configs/a.conf,/path/to/configs/b.conf'
959418495509b019f04f43b6fdda4c92|file:///Users/basilalbader/.tmux.conf|37|1|V|tmux
	# Automatically autoreload Config on change
	set-option -g @tmux-autoreload-configs '/path/to/configs/a.conf,/path/to/configs/b.conf'
	
1e7753b6e8ba20bdcd688ae7dec27d57|file:///Users/basilalbader/.tmux.conf|64|1|V|tmux
	# Other examples:
	# set -g @plugin 'github_username/plugin_name'
	# set -g @plugin 'github_username/plugin_name#branch'
	# set -g @plugin 'git@github.com:user/plugin'
	# set -g @plugin 'git@bitbucket.com:user/plugin'
cb356e1b56093f0fe5afa54eb47f36da|file:///Users/basilalbader/.tmux.conf|87|1|V|tmux
	
	
	 #Set status position on bottom of screen
	#set-option -g status-position bottom
	
	 #Set status main colors
	#set-option -g status-style bg=grey15,fg=white
	
	 #Set left status info
	#set-option -g status-left '#[fg=colour117]#(echo "Session: ")#[fg=colour202]#{session_name}'
	#set-option -g status-left-length 20
	
	 #Set position of windows list to centre
	#set-option -g status-justify centre
	
	 #Set right status info
	#set-option -g status-right '#[fg=colour117]#(date)'
	#set-option -g status-interval 1
	
	 #Set window formating
	#set-option -g window-status-format '#[fg=colour120]#{window_index}#[fg=colour120]#(echo ":")#[fg=colour120]#{window_name}#[fg=colour120]#{window_flags}'
	#set-option -g window-status-current-format '#[fg=colour120]#{window_index}#[fg=colour120]#(echo ":")#[fg=colour120]#{window_name}#[fg=colour120]#{window_flags}'
7a41e85b11c5075704f56d5cecc5d1e7|file:///Users/basilalbader/.tmux.conf|36|1|V|tmux
	set -g status-interval 5
9cce3989034df6e03e8aab712e6c8740|file:///Users/basilalbader/.tmux.conf|78|1|V|tmux
	set -g @cpu_temp_unit "C"
	set -g @cpu_temp_format "%3.0f"
	set -g @nova-segment-cpu-temp "#(~/.tmux/plugins/tmux-cpu/scripts/cpu_temp.sh)"
	set -g @nova-segment-cpu-temp-colors "#282a36 #f8f8f2"
1fb8253084d5572c876cebc3773b5c7b|file:///Users/basilalbader/.tmux.conf|71|1|V|tmux
	set -g @nova-segment-spotify " #(spotifycli --status)"
	set -g @nova-segment-spotify-colors "#282a36 #f8f8f2"
f2dc6a867d16867736654d1d172ac217|file:///Users/basilalbader/.tmux.conf|83|1|V|tmux
	set -g @gpu_temp_unit "C"
	set -g @gpu_temp_format "%3.0f"
	set -g @nova-segment-gpu-temp "#(~/.tmux/plugins/tmux-cpu/scripts/gpu_temp.sh)"
	set -g @nova-segment-gpu-temp-colors "#282a36 #f8f8f2"
	
	set -g @gram_percentage_format "%5.1f%%"
	set -g @nova-segment-gram "#(~/.tmux/plugins/tmux-cpu/scripts/gram_percentage.sh)"
	set -g @nova-segment-gram-colors "#282a36 #f8f8f2"
	
	set -g @net_speed_interfaces "enp6s0"
	set -g @net_speed_format "↓ %10s - ↑ %10s"
	set -g @nova-segment-net "#(~/.tmux/plugins/tmux-net-speed/scripts/net_speed.sh)"
	set -g @nova-segment-net-colors "#282a36 #f8f8f2"
	
	set -g @nova-segment-pomodoro "#(pomodoro status --format ' %%c  %%r %%d') "
	set -g @nova-segment-pomodoro-colors "#ff5555 #f8f8f2"
	
	set -g @nova-rows 1
	set -g @nova-segments-0-left "mode"
	set -g @nova-segments-0-right "whoami pomodoro"
	set -g @nova-segments-1-left "spotify"
	set -g @nova-segments-1-right "cpu ram cpu-temp gpu gram gpu-temp"
f33fc7295ae64c832ffd8b6da0c2d8f1|file:///Users/basilalbader/.tmux.conf|83|1|V|tmux
	set -g @gpu_temp_unit "C"
	set -g @gpu_temp_format "%3.0f"
	set -g @nova-segment-gpu-temp "#(~/.tmux/plugins/tmux-cpu/scripts/gpu_temp.sh)"
	set -g @nova-segment-gpu-temp-colors "#282a36 #f8f8f2"
	
	set -g @gram_percentage_format "%5.1f%%"
	set -g @nova-segment-gram "#(~/.tmux/plugins/tmux-cpu/scripts/gram_percentage.sh)"
	set -g @nova-segment-gram-colors "#282a36 #f8f8f2"
	
	set -g @net_speed_interfaces "enp6s0"
	set -g @net_speed_format "↓ %10s - ↑ %10s"
	set -g @nova-segment-net "#(~/.tmux/plugins/tmux-net-speed/scripts/net_speed.sh)"
	set -g @nova-segment-net-colors "#282a36 #f8f8f2"
	
7b40c4abed215949b806a05bf3dc72f7|file:///Users/basilalbader/.tmux.conf|83|1|V|tmux
	set -g @nova-segment-pomodoro "#(pomodoro status --format ' %%c  %%r %%d') "
	set -g @nova-segment-pomodoro-colors "#ff5555 #f8f8f2"
9662d63cbf971394f58f2e4d024b5dd3|file:///Users/basilalbader/.tmux.conf|79|1|V|tmux
	set -g @gpu_percentage_format "%5.1f%%"
	set -g @nova-segment-gpu "﬙ #(~/.tmux/plugins/tmux-cpu/scripts/gpu_percentage.sh)"
	set -g @nova-segment-gpu-colors "#282a36 #f8f8f2"
eb0af6bc11d22fc6d47b063866106315|file:///Users/basilalbader/.tmux.conf|70|1|V|tmux
	
	set -g @cpu_percentage_format "%5.1f%%"
	set -g @nova-segment-cpu " #(~/.tmux/plugins/tmux-cpu/scripts/cpu_percentage.sh)"
	set -g @nova-segment-cpu-colors "#282a36 #f8f8f2"
	
	set -g @ram_percentage_format "%5.1f%%"
	set -g @nova-segment-ram "#(~/.tmux/plugins/tmux-cpu/scripts/ram_percentage.sh)"
	set -g @nova-segment-ram-colors "#282a36 #f8f8f2"
517715396de3e7bb12ee41221027a550|file:///Users/basilalbader/.tmux.conf|56|1|V|tmux
	# Nova theme settings
	set -g @plugin 'o0th/tmux-nova'
	
	set -g @nova-nerdfonts true
	set -g @nova-nerdfonts-left 
	set -g @nova-nerdfonts-right 
	
	set -g @nova-segment-mode "#{?client_prefix,Ω,ω}"
	set -g @nova-segment-mode-colors "#50fa7b #282a36"
	
	set -g @nova-segment-whoami "#(whoami)@#h"
	set -g @nova-segment-whoami-colors "#50fa7b #282a36"
	
	set -g @nova-pane "#I#{?pane_in_mode,  #{pane_mode},}  #W"
	
	set -g @nova-rows 1
	set -g @nova-segments-0-left "mode"
	set -g @nova-segments-0-right "whoami pomodoro"
	set -g @nova-segments-1-left "spotify"
	set -g @nova-segments-1-right "cpu ram cpu-temp gpu gram gpu-temp"
9d6e9b3e18376d0e4d7671f04f698a15|file:///Users/basilalbader/.tmux.conf|82|1|V|tmux
	set -g @plugin 'o0th/tmux-nova'
782cd58d34f6f99e6e85e6508a7b42cd|file:///Users/basilalbader/.tmux.conf|38|27|v|tmux
	"#{pane_current_path}"
ef3e30e070f70244fd6578d88a6b77ac|file:///Users/basilalbader/.tmux.conf|63|5|v|tmux
	option
ff3a827202e854b35d0627f273fa72ea|file:///Users/basilalbader/.tmux.conf|63|1|V|tmux
	set- -g status-left '#[fg=colour117]#(echo "Session: ")#[fg=colour202]#{session_name}'
cfa831c783955fbd33423b9e03ade778|file:///Users/basilalbader/.tmux.conf|70|8|v|tmux
	ion -
25ea60b8ea38aef6337489b731c00c82|file:///Users/basilalbader/.tmux.conf|63|1|V|tmux
	set -g status-left '#[fg=colour117]#(echo "Session: ")#[fg=colour202]#{session_name}'
6330626844f8f046ed33623bd070a8d0|file:///Users/basilalbader/.tmux.conf|64|21|v|tmux
	#[fg=colour117]#(echo "Session: ")#[fg=colour202]#{session_name}
6ee885f2bac9354ef6677cc0d6ae591f|file:///Users/basilalbader/.tmux.conf|63|23|v|tmux
	[fg=colour117]
44a6772eb73565f91a6c798baeb11818|file:///Users/basilalbader/.tmux.conf|63|56|v|tmux
	#[fg=colour202]
ba3642ee6e8f789dcaf074ddedbb4cf0|file:///Users/basilalbader/.tmux.conf|63|37|v|tmux
	#(echo "Session: ")
4939a308e6c82b35d9856ae85124050b|file:///Users/basilalbader/.tmux.conf|65|1|V|tmux
	set -g status-left-length 80
695713da270fdc9f6409848da7b0d51d|file:///Users/basilalbader/.tmux.conf|35|21|v|tmux
	#{simple_git_status}
a8786a7630f04022c51ebd0da25231a2|file:///Users/basilalbader/.tmux.conf|35|1|V|tmux
	set -g status-left "#{simple_git_status}"
	
7edb835d2cf801e89cf02a23ebac0644|file:///Users/basilalbader/.tmux.conf|64|1|V|tmux
	set -g status-left "#{simple_git_status}"
f8faddea3ecead32db24e107858a3b70|file:///Users/basilalbader/.tmux.conf|34|1|V|tmux
	# TMUX simple git status
	set -g status-left "#{simple_git_status}"
e368e92d97060f1a2e76edd353d70564|file:///Users/basilalbader/.tmux.conf|76|1|V|tmux
	set -g @themepack 'basic'
a2d93bc93f522a13ae08d50544d9bbe2|file:///Users/basilalbader/.tmux.conf|81|1|V|tmux
	set -g @plugin 'jimeh/tmux-themepack'
c4e163c26529678d547bdcbb23afc7f4|file:///Users/basilalbader/.tmux.conf|80|1|V|tmux
	#set -g @plugin 'b0o/tmux-autoreload'
7c4425a847c2e81bab41ebb3b37d271c|file:///Users/basilalbader/.tmux.conf|5|1|V|tmux
	# Automatically autoreload Config on change
	#set-option -g @tmux-autoreload-configs '/path/to/configs/a.conf,/path/to/configs/b.conf'
	#display-message -p "#{config_files}"
5592b4a652a9439539e1b7f76215af67|file:///Users/basilalbader/.zshrc|43|1|V|zsh
	
	# nvim ========================================================================
d278a0e605fef37afb6107c34b3eec72|file:///Users/basilalbader/.zshrc|45|1|V|zsh
	alias tm="tmux"
1fb5c0e698ee8fac0a36d3732d9dfef0|file:///Users/basilalbader/.zshrc|46|1|V|zsh
	alias tmns="tmux new -s"
6f5cd84a87fd43c7b271b5a57c30127d|file:///Users/basilalbader/.zshrc|51|1|V|zsh
	alias tmd="<Ctrl-b> d"
9f44a8fdb8a71d1c174267de6a74f6cc|file:///Users/basilalbader/.zshrc|52|1|V|zsh
	# nvim ========================================================================
	alias n="nvim"
8d1b69dd9bdc9df4a8073c7a8193c7af|file:///Users/basilalbader/dev/C/test.c|7|1|V|c
	
	
	
	
	
	
	
	
	
c2e79fc1ce8f8a8cefacf7ac1b0e72e6|file:///Users/basilalbader/dev/42/School_Projects/42_Libft/ft_strjoin.c|15|1|V|c
	char	*ft_strcat(char *dst, const char *src)
	{
		unsigned int	i;
		unsigned int	j;
	
		i = 0;
		while (dst[i])
			i++;
		j = 0;
		while (src[j])
		{
			dst[i] = src[j];
			i++;
			j++;
		}
		dst[i] = '\0';
		return (dst);
	}
	
f3aed2cac184c66c6c5ffd8d37e8e6fb|file:///Users/basilalbader/dev/42/School_Projects/42_Libft/ft_strjoin.c|18|2|V|c
		unsigned int	tot_len;
fd59a8de3a41b460ff95d380b30ef9bf|file:///Users/basilalbader/dev/42/School_Projects/42_Libft/ft_strjoin.c|17|1|V|c
		char			*res;
		
	
		if (!s1 || !s2)
			return (NULL);
		tot_len = ft_strlen(s1) + ft_strlen(s2);
		res = (char *)malloc(sizeof(char) * (tot_len + 1));
		if (!res)
			return (NULL);
		ft_strcat(res, s1);
		ft_strcat(res, s2);
		res[tot_len - 1] = '\0';
		return (res);
c91c05c4d168eb1c5b755a499b2d9dc9|file:///Users/basilalbader/dev/42/School_Projects/42_get_next_line/get_next_line_utils.c|94|9|v|c
	i < ft_strlen(s1)
7e1e161783ce02719322d7d031ce4e1d|file:///Users/basilalbader/dev/42/School_Projects/42_get_next_line/main.c|18|1|V|c
	#if 0
	void	*malloc(size_t size)
	{
		(void)size;
	
		return (NULL);
	}
	#endif
	
	#if 0
	ssize_t	read(int fildes, void *buf, size_t nbyte)
	{
		(void)fildes;
		(void)buf;
		(void)nbyte;
	
		return (-1);
	}
	#endif
	
	#if 0
	char	*ft_strjoin(char const *s1, char const *s2)
	{
		(void)s1;
		(void)s2;
	
		return (NULL);
	}
	#endif
	
	#if 0
	char	*ft_substr(char const *s, unsigned int start, size_t len)
	{
		(void)s;
		(void)start;
		(void)len;
	
		return (NULL);
	}
	#endif
	
	#if 0
	char	*ft_strdup(const char *s1)
	{
		(void)s1;
	
		return (NULL);
	}
	#endif
	
f2c1d0744f4846b34fc646b24246887c|file:///Users/basilalbader/dev/42/School_Projects/42_get_next_line/gnl_bonus/get_next_line_bonus.h|1|1|V|cpp
	/* ************************************************************************** */
	/*                                                                            */
	/*                                                        :::      ::::::::   */
	/*   get_next_line.h                                    :+:      :+:    :+:   */
	/*                                                    +:+ +:+         +:+     */
	/*   By: baalbade <baalbade@student.42.fr>          +#+  +:+       +#+        */
	/*                                                +#+#+#+#+#+   +#+           */
	/*   Created: 2022/10/08 18:54:29 by baalbade          #+#    #+#             */
	/*   Updated: 2022/10/08 18:54:31 by baalbade         ###   ########.fr       */
	/*                                                                            */
	/* ************************************************************************** */
